import math 
import numpy as np 

#assign input values 
input_value = np.array([[0,0], [0,1],[1,1], [1,0]])
input_value.shape 
input_value 


#assign the output values
output = np.array([0,1,1,0])
output = output.reshape(4,1)
output.shape


#assign the weight
weights = np.array([[0.1], [0.2]])
weights 

#add bias
bias = 0.3 

#activation function 
def sigmoid_function(x): 
    return 1/(1+np.exp(-x))

#Derivative function 
def der(x): 
    return sigmoid_function(x) * (1 - sigmoid_function(x))
    

#updating the weights 
for epochs in range(10000): 
    input_arr = input_value

    weighted_sum = np.dot(input_arr, weights) + bias
    first_output = sigmoid_function(weighted_sum)

    error = first_output - output 
    total_error = np.square(np.subtract(first_output, output)).mean()

    first_der = error 
    second_der = der(first_output)
    derivative = first_der * second_der 

    t_input = input_value.T
    final_derivative = np.dot(t_input, derivative)

    #update the weights 
    weights = weights - 0.05 * final_derivative 

    #update bias
    for i in derivative: 
        bias = bias - 0.05 * i
        
#print(weights)
#print(bias)

#Define problems for user
print("Welcome to plant disease identification for pottasium and magnesium deficiency")
print("from the following options, choose the most appropriate symptom your plant is showing:")
user_input = input("""
a = brown scorching and curling of leaf tips 
b = early leaf fall 
c = chlorosis (yellowing) between leaf veins 
d = poor flowering or fruiting  
""")

if user_input == "a": 
    pred = np.array([0,1])
elif user_input == "b": 
    pred = np.array([0,0])
elif user_input == "c": 
    pred = np.array([1,1])
elif user_input == "d": 
    pred = np.array([1,0])
else: 
    print("sorry invalid input")




#predictions 

#pred = np.array([0,0])

result = np.dot(pred, weights) + bias

res = sigmoid_function(result)

#print(res)
final_result = math.floor(res[0])
#print(final_result)

if final_result == 0: 
    print("your plant has a Magnesium deficiency")
elif final_result == 1: 
    print("your plant has a Potassium deficiency")
else: 
    print("sorry, we could not identify your plant's disease, try using GOOGLE")
